parameters:
  - name: sa
  - name: container
  - name: environment
  - name: project
  - name: service_connection
  - name: subscription_id

stages:
  - stage: terraform_apply
    displayName: Terraform Apply
    # note the syntax for conditions is different to setting variables
    # https://learn.microsoft.com/en-us/azure/devops/pipelines/process/deployment-jobs?view=azure-devops
    condition: and(succeeded(), eq(dependencies.terraform_plan.outputs['terraform_plan.plan.result'], 'changed'))
    jobs:
      - deployment: terraform_apply
        displayName: Terraform Apply
        workspace:
          clean: all
        environment: ${{ parameters.environment }}
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self

                - task: AzureCLI@2
                  displayName: terraform init
                  inputs:
                    azureSubscription: ${{ parameters.service_connection }}
                    scriptType: bash
                    scriptLocation: scriptPath
                    scriptPath: scripts/terraform_init.sh
                    workingDirectory: $(Agent.BuildDirectory)/terraform-plan/terraform
                    addSpnToEnvironment: true
                    arguments: >
                      -backend-config="storage_account_name=${{ parameters.sa }}"
                      -backend-config="container_name=${{ parameters.container }}"
                      -backend-config="key=${{ parameters.project }}-${{ parameters.environment }}.tfstate"
                  env:
                    TF_IN_AUTOMATION: true
                    ARM_SUBSCRIPTION_ID: ${{ parameters.subscription_id }}
                    ARM_USE_AZUREAD: true

                - task: AzureCLI@2
                  displayName: terraform apply
                  inputs:
                    azureSubscription: ${{ parameters.service_connection }}
                    scriptType: bash
                    scriptLocation: scriptPath
                    scriptPath: scripts/terraform_apply.sh
                    workingDirectory: $(Agent.BuildDirectory)/terraform-plan/terraform
                    addSpnToEnvironment: true
                  env:
                    TF_IN_AUTOMATION: true
